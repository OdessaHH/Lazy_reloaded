# Generated by Django 5.0.1 on 2024-02-14 10:15

import apps.users.models
import datetime
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="LazyUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "user_id",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                (
                    "email",
                    models.EmailField(max_length=60, unique=True, verbose_name="email"),
                ),
                ("username", models.CharField(max_length=60, unique=True)),
                ("first_name", models.CharField(max_length=60)),
                ("last_name", models.CharField(max_length=60)),
                ("is_superuser", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", apps.users.models.LazyUserManager()),
            ],
        ),
        migrations.CreateModel(
            name="LazyUserProfile",
            fields=[
                ("lazy_user_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "use_case",
                    models.CharField(
                        choices=[
                            ("job", "Job Applications"),
                            ("flat", "Flat Applications"),
                            ("both", "Job&Flat Applications"),
                        ],
                        default="job",
                        max_length=60,
                    ),
                ),
                ("cv_file", models.FileField(blank=True, null=True, upload_to="cvs")),
                ("cv_text", models.TextField(blank=True, null=True)),
                ("email", models.EmailField(blank=True, max_length=60)),
                (
                    "availability",
                    models.DateField(
                        default=datetime.datetime(
                            2024,
                            2,
                            14,
                            10,
                            15,
                            28,
                            683284,
                            tzinfo=datetime.timezone.utc,
                        ),
                        verbose_name="Earliest Start Date",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
